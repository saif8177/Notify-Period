package com.g12.capacitor.admob.ads;

import android.annotation.SuppressLint;
import android.content.Context;
import android.os.Build;
import android.view.LayoutInflater;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.appcompat.widget.AppCompatButton;

import com.getcapacitor.JSObject;
import com.getcapacitor.Plugin;
import com.getcapacitor.PluginCall;
import com.getcapacitor.PluginMethod;
import com.getcapacitor.annotation.CapacitorPlugin;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdLoader;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.LoadAdError;
import com.google.android.gms.ads.nativead.NativeAd;
import com.google.android.gms.ads.nativead.NativeAdOptions;
import com.google.android.gms.ads.nativead.NativeAdView;

@CapacitorPlugin(name = "AdmobAds")
public class AdmobAdsPlugin extends Plugin {
    AdLoader adLoader;

    private AdmobAds implementation = new AdmobAds();

    @PluginMethod
    public void echo(PluginCall call) {
        String value = call.getString("value");

        JSObject ret = new JSObject();
        ret.put("value", implementation.echo(value));
        call.resolve(ret);
    }

    @PluginMethod()
    public void loadNativeAd(PluginCall call) {
        String adId = call.getString("adId");

        JSObject res = new JSObject();

        adLoader = new AdLoader.Builder(getContext(), adId)
                .forNativeAd(new NativeAd.OnNativeAdLoadedListener() {
                    @SuppressLint("ResourceType")
                    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR2)
                    @Override
                    public void onNativeAdLoaded(NativeAd nativeAd) {
                        Toast.makeText(getContext(), "HEADLINE " + nativeAd.getHeadline(), Toast.LENGTH_SHORT).show();

                        res.put("headline", nativeAd.getHeadline());
                        res.put("body", nativeAd.getBody());
                    }
                })
                .withAdListener(new AdListener() {
                    @Override
                    public void onAdFailedToLoad(LoadAdError adError) {
                        Toast.makeText(getContext(), "ERR " + adError.getMessage(), Toast.LENGTH_SHORT).show();
                        // Handle the failure by logging, altering the UI, and so on.
                    }
                })
                .withNativeAdOptions(new NativeAdOptions.Builder()
                        // Methods in the NativeAdOptions.Builder class can be
                        // used here to specify individual options settings.
                        .build())
                .build();

        adLoader.loadAd(new AdRequest.Builder().build());


        call.resolve(res);
    }
}
