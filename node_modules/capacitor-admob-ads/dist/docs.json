{
  "api": {
    "name": "AdmobAdsPlugin",
    "slug": "admobadsplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "loadNativeAd",
        "signature": "(options: NativeAdOptions) => Promise<{ ads: AdResult[]; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "NativeAdOptions"
          }
        ],
        "returns": "Promise<{ ads: AdResult[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "AdResult",
          "NativeAdOptions"
        ],
        "slug": "loadnativead"
      },
      {
        "name": "triggerNativeAd",
        "signature": "(options: NativeAdTriggerOptions) => void",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "NativeAdTriggerOptions"
          }
        ],
        "returns": "void",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "NativeAdTriggerOptions"
        ],
        "slug": "triggernativead"
      },
      {
        "name": "loadRewardedVideoAd",
        "signature": "(options: RewaredVideoAdOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "RewaredVideoAdOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "RewaredVideoAdOptions"
        ],
        "slug": "loadrewardedvideoad"
      },
      {
        "name": "showRewardedVideoAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showrewardedvideoad"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdShowed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdShowed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoadshowed"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdFailedToShow', listenerFunc: (error: { message: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdFailedToShow'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(error: { message: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoadfailedtoshow"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdDismissed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdDismissed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoaddismissed"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdClicked', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoadclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdImpression', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdImpression'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoadimpression"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedVideoAdOnRewarded', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedVideoAdOnRewarded'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedvideoadonrewarded"
      },
      {
        "name": "loadRewardedInterstitialAd",
        "signature": "(options: RewaredInterstitialAdOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "RewaredInterstitialAdOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "RewaredInterstitialAdOptions"
        ],
        "slug": "loadrewardedinterstitialad"
      },
      {
        "name": "showRewardedInterstitialAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showrewardedinterstitialad"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdShowed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdShowed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialadshowed"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdFailedToShow', listenerFunc: (error: { message: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdFailedToShow'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(error: { message: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialadfailedtoshow"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdDismissed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdDismissed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialaddismissed"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdClicked', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialadclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdImpression', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdImpression'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialadimpression"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'rewardedInterstitialAdOnRewarded', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'rewardedInterstitialAdOnRewarded'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerrewardedinterstitialadonrewarded"
      },
      {
        "name": "loadInterstitialAd",
        "signature": "(options: InterstitialAdOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "InterstitialAdOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "InterstitialAdOptions"
        ],
        "slug": "loadinterstitialad"
      },
      {
        "name": "showInterstitialAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "showinterstitialad"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'interstitialAdClicked', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'interstitialAdClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerinterstitialadclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'interstitialAdDismissed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'interstitialAdDismissed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerinterstitialaddismissed"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'interstitialAdFailedToShow', listenerFunc: (error: { message: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'interstitialAdFailedToShow'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(error: { message: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerinterstitialadfailedtoshow"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'interstitialAdImpression', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'interstitialAdImpression'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerinterstitialadimpression"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'interstitialAdShowed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'interstitialAdShowed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerinterstitialadshowed"
      },
      {
        "name": "showBannerAd",
        "signature": "(options: BannerAdOptions) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "BannerAdOptions"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "BannerAdOptions"
        ],
        "slug": "showbannerad"
      },
      {
        "name": "hideBannerAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "hidebannerad"
      },
      {
        "name": "resumeBannerAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "resumebannerad"
      },
      {
        "name": "removeBannerAd",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removebannerad"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'bannerAdOpened', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdOpened'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradopened"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'bannerAdClicked', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdClicked'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradclicked"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'bannerAdImpression', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdImpression'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradimpression"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'bannerAdClosed', listenerFunc: () => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'bannerAdClosed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "() => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerbanneradclosed"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "AdResult",
      "slug": "adresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "headline",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "body",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "advertiser",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "icon",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "cover",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "cta",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "adChoicesUrl",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "NativeAdOptions",
      "slug": "nativeadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isTesting",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "adsCount",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "1 | 2 | 5 | 4 | 3"
        }
      ]
    },
    {
      "name": "NativeAdTriggerOptions",
      "slug": "nativeadtriggeroptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "id",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "RewaredVideoAdOptions",
      "slug": "rewaredvideoadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isTesting",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    },
    {
      "name": "RewaredInterstitialAdOptions",
      "slug": "rewaredinterstitialadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isTesting",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "InterstitialAdOptions",
      "slug": "interstitialadoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isTesting",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "BannerAdOptions",
      "slug": "banneradoptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "adId",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "isTesting",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        },
        {
          "name": "adSize",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "BannerSize"
          ],
          "type": "BannerSize"
        },
        {
          "name": "adPosition",
          "tags": [],
          "docs": "",
          "complexTypes": [
            "BannerPosition"
          ],
          "type": "BannerPosition"
        }
      ]
    }
  ],
  "enums": [
    {
      "name": "BannerSize",
      "slug": "bannersize",
      "members": [
        {
          "name": "BANNER",
          "value": "'BANNER'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "LARGE_BANNER",
          "value": "'LARGE_BANNER'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "MEDIUM_RECTANGLE",
          "value": "'MEDIUM_RECTANGLE'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "FULL_BANNER",
          "value": "'FULL_BANNER'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "LEADERBOARD",
          "value": "'LEADERBOARD'",
          "tags": [],
          "docs": ""
        }
      ]
    },
    {
      "name": "BannerPosition",
      "slug": "bannerposition",
      "members": [
        {
          "name": "TOP",
          "value": "'top'",
          "tags": [],
          "docs": ""
        },
        {
          "name": "BOTTOM",
          "value": "'bottom'",
          "tags": [],
          "docs": ""
        }
      ]
    }
  ],
  "typeAliases": [],
  "pluginConfigs": []
}